// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: rpc/taxonomy/taxonomy.proto

package taxonomy

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_rpc_taxonomy_taxonomy_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_rpc_taxonomy_taxonomy_proto_rawDescGZIP(), []int{1}
}

func (x *CreateUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_rpc_taxonomy_taxonomy_proto_rawDescGZIP(), []int{2}
}

func (x *CreateUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type LookupDiscordUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscordId string `protobuf:"bytes,1,opt,name=discord_id,json=discordId,proto3" json:"discord_id,omitempty"`
}

func (x *LookupDiscordUserRequest) Reset() {
	*x = LookupDiscordUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupDiscordUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupDiscordUserRequest) ProtoMessage() {}

func (x *LookupDiscordUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupDiscordUserRequest.ProtoReflect.Descriptor instead.
func (*LookupDiscordUserRequest) Descriptor() ([]byte, []int) {
	return file_rpc_taxonomy_taxonomy_proto_rawDescGZIP(), []int{3}
}

func (x *LookupDiscordUserRequest) GetDiscordId() string {
	if x != nil {
		return x.DiscordId
	}
	return ""
}

type LookupDiscordUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *LookupDiscordUserResponse) Reset() {
	*x = LookupDiscordUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupDiscordUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupDiscordUserResponse) ProtoMessage() {}

func (x *LookupDiscordUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupDiscordUserResponse.ProtoReflect.Descriptor instead.
func (*LookupDiscordUserResponse) Descriptor() ([]byte, []int) {
	return file_rpc_taxonomy_taxonomy_proto_rawDescGZIP(), []int{4}
}

func (x *LookupDiscordUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type LinkDiscordUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DiscordId string `protobuf:"bytes,2,opt,name=discord_id,json=discordId,proto3" json:"discord_id,omitempty"`
}

func (x *LinkDiscordUserRequest) Reset() {
	*x = LinkDiscordUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkDiscordUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkDiscordUserRequest) ProtoMessage() {}

func (x *LinkDiscordUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkDiscordUserRequest.ProtoReflect.Descriptor instead.
func (*LinkDiscordUserRequest) Descriptor() ([]byte, []int) {
	return file_rpc_taxonomy_taxonomy_proto_rawDescGZIP(), []int{5}
}

func (x *LinkDiscordUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LinkDiscordUserRequest) GetDiscordId() string {
	if x != nil {
		return x.DiscordId
	}
	return ""
}

type LinkDiscordUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LinkDiscordUserResponse) Reset() {
	*x = LinkDiscordUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkDiscordUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkDiscordUserResponse) ProtoMessage() {}

func (x *LinkDiscordUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkDiscordUserResponse.ProtoReflect.Descriptor instead.
func (*LinkDiscordUserResponse) Descriptor() ([]byte, []int) {
	return file_rpc_taxonomy_taxonomy_proto_rawDescGZIP(), []int{6}
}

type UnlinkDiscordUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DiscordId string `protobuf:"bytes,2,opt,name=discord_id,json=discordId,proto3" json:"discord_id,omitempty"`
}

func (x *UnlinkDiscordUserRequest) Reset() {
	*x = UnlinkDiscordUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlinkDiscordUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkDiscordUserRequest) ProtoMessage() {}

func (x *UnlinkDiscordUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkDiscordUserRequest.ProtoReflect.Descriptor instead.
func (*UnlinkDiscordUserRequest) Descriptor() ([]byte, []int) {
	return file_rpc_taxonomy_taxonomy_proto_rawDescGZIP(), []int{7}
}

func (x *UnlinkDiscordUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UnlinkDiscordUserRequest) GetDiscordId() string {
	if x != nil {
		return x.DiscordId
	}
	return ""
}

type UnlinkDiscordUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnlinkDiscordUserResponse) Reset() {
	*x = UnlinkDiscordUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlinkDiscordUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkDiscordUserResponse) ProtoMessage() {}

func (x *UnlinkDiscordUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_taxonomy_taxonomy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkDiscordUserResponse.ProtoReflect.Descriptor instead.
func (*UnlinkDiscordUserResponse) Descriptor() ([]byte, []int) {
	return file_rpc_taxonomy_taxonomy_proto_rawDescGZIP(), []int{8}
}

var File_rpc_taxonomy_taxonomy_proto protoreflect.FileDescriptor

var file_rpc_taxonomy_taxonomy_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x72, 0x70, 0x63, 0x2f, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2f, 0x74,
	0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x73, 0x64, 0x6c, 0x70, 0x2e,
	0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x27, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x73, 0x64, 0x6c, 0x70, 0x2e, 0x74, 0x61, 0x78,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x22, 0x39, 0x0a, 0x18, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x19, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x73, 0x64, 0x6c, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x50, 0x0a,
	0x16, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22,
	0x19, 0x0a, 0x17, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x18, 0x55, 0x6e,
	0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x1b,
	0x0a, 0x19, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xef, 0x03, 0x0a, 0x08,
	0x54, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x12, 0x69, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x73, 0x64, 0x6c, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x62, 0x73, 0x64, 0x6c, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x11, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x73, 0x64, 0x6c, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x73, 0x64, 0x6c, 0x70,
	0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x0f, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x31, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x73, 0x64, 0x6c, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x73, 0x64, 0x6c, 0x70, 0x2e, 0x74, 0x61, 0x78,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a,
	0x11, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x33, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x62, 0x73, 0x64, 0x6c, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x55,
	0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x73, 0x64, 0x6c, 0x70, 0x2e, 0x74, 0x61, 0x78, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x28, 0x5a,
	0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x73, 0x64, 0x6c,
	0x70, 0x2f, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x74,
	0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_taxonomy_taxonomy_proto_rawDescOnce sync.Once
	file_rpc_taxonomy_taxonomy_proto_rawDescData = file_rpc_taxonomy_taxonomy_proto_rawDesc
)

func file_rpc_taxonomy_taxonomy_proto_rawDescGZIP() []byte {
	file_rpc_taxonomy_taxonomy_proto_rawDescOnce.Do(func() {
		file_rpc_taxonomy_taxonomy_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_taxonomy_taxonomy_proto_rawDescData)
	})
	return file_rpc_taxonomy_taxonomy_proto_rawDescData
}

var file_rpc_taxonomy_taxonomy_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_rpc_taxonomy_taxonomy_proto_goTypes = []interface{}{
	(*User)(nil),                      // 0: github.com.bsdlp.taxonomy.User
	(*CreateUserRequest)(nil),         // 1: github.com.bsdlp.taxonomy.CreateUserRequest
	(*CreateUserResponse)(nil),        // 2: github.com.bsdlp.taxonomy.CreateUserResponse
	(*LookupDiscordUserRequest)(nil),  // 3: github.com.bsdlp.taxonomy.LookupDiscordUserRequest
	(*LookupDiscordUserResponse)(nil), // 4: github.com.bsdlp.taxonomy.LookupDiscordUserResponse
	(*LinkDiscordUserRequest)(nil),    // 5: github.com.bsdlp.taxonomy.LinkDiscordUserRequest
	(*LinkDiscordUserResponse)(nil),   // 6: github.com.bsdlp.taxonomy.LinkDiscordUserResponse
	(*UnlinkDiscordUserRequest)(nil),  // 7: github.com.bsdlp.taxonomy.UnlinkDiscordUserRequest
	(*UnlinkDiscordUserResponse)(nil), // 8: github.com.bsdlp.taxonomy.UnlinkDiscordUserResponse
	(*timestamppb.Timestamp)(nil),     // 9: google.protobuf.Timestamp
}
var file_rpc_taxonomy_taxonomy_proto_depIdxs = []int32{
	9, // 0: github.com.bsdlp.taxonomy.User.created_at:type_name -> google.protobuf.Timestamp
	9, // 1: github.com.bsdlp.taxonomy.User.updated_at:type_name -> google.protobuf.Timestamp
	0, // 2: github.com.bsdlp.taxonomy.CreateUserResponse.user:type_name -> github.com.bsdlp.taxonomy.User
	0, // 3: github.com.bsdlp.taxonomy.LookupDiscordUserResponse.user:type_name -> github.com.bsdlp.taxonomy.User
	1, // 4: github.com.bsdlp.taxonomy.Taxonomy.CreateUser:input_type -> github.com.bsdlp.taxonomy.CreateUserRequest
	3, // 5: github.com.bsdlp.taxonomy.Taxonomy.LookupDiscordUser:input_type -> github.com.bsdlp.taxonomy.LookupDiscordUserRequest
	5, // 6: github.com.bsdlp.taxonomy.Taxonomy.LinkDiscordUser:input_type -> github.com.bsdlp.taxonomy.LinkDiscordUserRequest
	7, // 7: github.com.bsdlp.taxonomy.Taxonomy.UnlinkDiscordUser:input_type -> github.com.bsdlp.taxonomy.UnlinkDiscordUserRequest
	2, // 8: github.com.bsdlp.taxonomy.Taxonomy.CreateUser:output_type -> github.com.bsdlp.taxonomy.CreateUserResponse
	4, // 9: github.com.bsdlp.taxonomy.Taxonomy.LookupDiscordUser:output_type -> github.com.bsdlp.taxonomy.LookupDiscordUserResponse
	6, // 10: github.com.bsdlp.taxonomy.Taxonomy.LinkDiscordUser:output_type -> github.com.bsdlp.taxonomy.LinkDiscordUserResponse
	8, // 11: github.com.bsdlp.taxonomy.Taxonomy.UnlinkDiscordUser:output_type -> github.com.bsdlp.taxonomy.UnlinkDiscordUserResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_rpc_taxonomy_taxonomy_proto_init() }
func file_rpc_taxonomy_taxonomy_proto_init() {
	if File_rpc_taxonomy_taxonomy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_taxonomy_taxonomy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_taxonomy_taxonomy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_taxonomy_taxonomy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_taxonomy_taxonomy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupDiscordUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_taxonomy_taxonomy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupDiscordUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_taxonomy_taxonomy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkDiscordUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_taxonomy_taxonomy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkDiscordUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_taxonomy_taxonomy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlinkDiscordUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_taxonomy_taxonomy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlinkDiscordUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_taxonomy_taxonomy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_taxonomy_taxonomy_proto_goTypes,
		DependencyIndexes: file_rpc_taxonomy_taxonomy_proto_depIdxs,
		MessageInfos:      file_rpc_taxonomy_taxonomy_proto_msgTypes,
	}.Build()
	File_rpc_taxonomy_taxonomy_proto = out.File
	file_rpc_taxonomy_taxonomy_proto_rawDesc = nil
	file_rpc_taxonomy_taxonomy_proto_goTypes = nil
	file_rpc_taxonomy_taxonomy_proto_depIdxs = nil
}
